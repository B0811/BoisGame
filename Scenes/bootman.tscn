[gd_scene load_steps=13 format=3 uid="uid://bkisc00bnc7qc"]

[ext_resource type="Texture2D" uid="uid://cyms0mkaqnes" path="res://Assets/pixil-frame-0 (53).png" id="2_lr2cg"]
[ext_resource type="Script" path="res://Scenes/Camera2D.gd" id="3_jq337"]
[ext_resource type="Texture2D" uid="uid://bqlda4iilitpu" path="res://Assets/pixil-frame-0 (56).png" id="3_qhyti"]
[ext_resource type="PackedScene" uid="uid://dq2hvw0r1ouh4" path="res://newui.tscn" id="4_0vulx"]
[ext_resource type="AudioStream" uid="uid://b4ntkv6yhkxq1" path="res://untitled - Copy.mp3" id="4_fqecg"]
[ext_resource type="Script" path="res://Timer.gd" id="4_gq8ib"]

[sub_resource type="GDScript" id="GDScript_kd4vc"]
resource_name = "bootman.gd"
script/source = "extends CharacterBody2D
@onready var cannon_sound2 = $CannonSound

const CANNONPARTICLES = preload(\"res://cannonparticles.tscn\")
var cannonball_scene = preload(\"res://canonbaw.tscn\")
var last_shot = 0.0
const SPEED = 300.0
var shot_cooldown = 0.5
@onready var bobbinganimation = $bobbinganimation
@onready var rockinganimation = $rockinganimation

@onready var camera_2d = $Camera2D



@onready var sprite_2d = $Sprite2D

func _physics_process(_delta):
	
	# Omnidirectional movement
	var input_vector = Vector2.ZERO
	input_vector.x = Input.get_action_strength(\"ui_right\") - Input.get_action_strength(\"ui_left\")
	input_vector.y = Input.get_action_strength(\"ui_down\") - Input.get_action_strength(\"ui_up\")
	input_vector = input_vector.normalized()
	move_and_slide()
	
	
	if input_vector:
		velocity = input_vector * SPEED
	else:
		velocity = input_vector
	
	if velocity.x > 0:
		sprite_2d.flip_h = true
	elif velocity.x < 0:
		sprite_2d.flip_h = false
	
	ShootingMechanics.mouse = get_global_mouse_position()
	ShootingMechanics.cannon_sound = cannon_sound2
	
	CurrencyManager.global_player_position = global_position
	
	
	
		
	last_shot += _delta
	
	CurrencyManager.cannon_cooldown = last_shot
	
	
	#shooting logic
	if Input.is_action_pressed(\"shoot\") and last_shot >= CurrencyManager.player_firerate:
		if ShootingMechanics.basicshot == true:
			ShootingMechanics.basic_shot()
		elif ShootingMechanics.basicshot == false:
			if ShootingMechanics.shotgunshot == true:
				ShootingMechanics.shotgun_shot()
		last_shot = 0





func _on_bootmanarea_area_entered(area):
	if area.is_in_group(\"enemyprojectile\"):
		CurrencyManager.player_health -= 1
		print(CurrencyManager.player_health)
		CurrencyManager.camera.shake(0.5, 2)
		#print(\"Hit! health: \" + str(health))
		death()
	if area.is_in_group(\"healthpickup\"):
		CurrencyManager.player_health += 1
		if CurrencyManager.player_health > CurrencyManager.player_max_health:
			CurrencyManager.player_health = CurrencyManager.player_max_health
			print(CurrencyManager.player_health)
	if area.is_in_group(\"shotgunpick\"):
		ShootingMechanics.basicshot = false
		ShootingMechanics.shotgunshot = true

func death():
	if CurrencyManager.player_health <= 0:
		queue_free()
		CurrencyManager.player_health = 10
		get_tree().reload_current_scene()
	elif CurrencyManager.player_health >= 0:
		pass



func _on_timer_timeout():
	pass # Replace with function body.
"

[sub_resource type="CircleShape2D" id="CircleShape2D_huvsg"]
radius = 48.0104

[sub_resource type="SpriteFrames" id="SpriteFrames_p83en"]
animations = [{
"frames": [{
"duration": 1.0,
"texture": ExtResource("2_lr2cg")
}, {
"duration": 1.0,
"texture": ExtResource("3_qhyti")
}],
"loop": true,
"name": &"default",
"speed": 5.0
}]

[sub_resource type="Animation" id="Animation_dlqiq"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:rotation")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [0.0698132]
}

[sub_resource type="Animation" id="Animation_3l6iq"]
resource_name = "bobbing"
length = 0.6
loop_mode = 2
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:rotation")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.3, 0.6),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 0,
"values": [0.0698132, 0.0, -0.0698132]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_jctsk"]
_data = {
"RESET": SubResource("Animation_dlqiq"),
"bobbing": SubResource("Animation_3l6iq")
}

[node name="bootman" type="CharacterBody2D" groups=["playercircle", "players"]]
rotation = 0.0698132
script = SubResource("GDScript_kd4vc")

[node name="hitbox" type="CollisionShape2D" parent="."]
position = Vector2(3, 14)
shape = SubResource("CircleShape2D_huvsg")

[node name="Sprite2D" type="AnimatedSprite2D" parent="."]
scale = Vector2(0.75, 0.75)
sprite_frames = SubResource("SpriteFrames_p83en")
autoplay = "default"
frame_progress = 0.458334

[node name="bootmanarea" type="Area2D" parent="." groups=["playercircle", "players"]]

[node name="area" type="CollisionShape2D" parent="bootmanarea"]
position = Vector2(3, 14)
shape = SubResource("CircleShape2D_huvsg")

[node name="rockinganimation" type="AnimationPlayer" parent="."]
libraries = {
"": SubResource("AnimationLibrary_jctsk")
}
autoplay = "bobbing"
speed_scale = 1.3

[node name="Camera2D" type="Camera2D" parent="."]
offset = Vector2(11.845, 0)
script = ExtResource("3_jq337")

[node name="Timer" type="Timer" parent="Camera2D"]

[node name="CannonSound" type="AudioStreamPlayer" parent="."]
stream = ExtResource("4_fqecg")

[node name="CanvasLayer" type="CanvasLayer" parent="."]

[node name="Node2D" parent="CanvasLayer" instance=ExtResource("4_0vulx")]

[node name="Timer" type="Timer" parent="CanvasLayer"]
wait_time = 4.0
one_shot = true
autostart = true
script = ExtResource("4_gq8ib")

[connection signal="area_entered" from="bootmanarea" to="." method="_on_bootmanarea_area_entered"]
[connection signal="timeout" from="Camera2D/Timer" to="Camera2D" method="_on_timer_timeout"]
[connection signal="timeout" from="CanvasLayer/Timer" to="CanvasLayer/Timer" method="_on_timeout"]
